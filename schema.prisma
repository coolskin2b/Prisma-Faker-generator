generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_DB_URL")
  directUrl = env("POSTGRES_PRISMA_DB_URL_NON_POOLING")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id            String        @id @default(cuid())
  name          String?
  slug          String        @unique
  order         Int
  posts         Post[]
  subCategories SubCategory[]
}

model SubCategory {
  id         String    @id @default(cuid())
  name       String?
  slug       String    @unique
  order      Int
  categoryId String?
  posts      Post[]
  category   Category? @relation(fields: [categoryId], references: [id])
}

model Post {
  id              String       @id @default(cuid())
  title           String
  slug            String       @unique
  content         String
  published       Boolean
  author          String
  metaTitle       String
  metaDescription String
  metaKeywords    String[]
  canonicalURL    String
  headerImage     String
  tags            String[]
  publishedDate   DateTime
  updateDate      DateTime
  categoryId      String?
  subCategoryId   String?
  category        Category?    @relation(fields: [categoryId], references: [id])
  subCategory     SubCategory? @relation(fields: [subCategoryId], references: [id])
}
